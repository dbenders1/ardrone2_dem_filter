%% Initialization
clear;
close all;
clc;


%% Plot parameters
axFontSize = 15;
labelFontSize = 20;
titleFontSize = 25;


%% Load noise data
load measProcessNoise.mat;


%% Measurement noise + generation using Gaussian filter
% Generate noise with same variance and smoothness as measurement noise
zN = length(zT);

zW = normrnd(zMu,zSigma,[1,zN]);

zTDiff = zeros(1,zN-1);
for i = 1:zN-1
    zTDiff(i) = zT(i+1) - zT(i);
end
zTs  = mean(zTDiff);
zTau = linspace(-zT(end),zT(end),2*zN-1);
h    = sqrt(1/zTs*zS*sqrt(pi))*exp(-zTau.^2/(2*zS^2));
zCol = conv(h,zW,'valid');

% Plot data
figure('Name',['Measurement noise and comparable coloured noise using '...
               'Gaussian filter']);
subplot(3,1,1);
plot(zT,zW);
% xlim([0,1.5]);
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad)','FontSize',labelFontSize);
title('White noise with same distribution as z','FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;
subplot(3,1,2);
plot(zT,zCol);
% xlim([0,1.5]);
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad)','FontSize',labelFontSize);
title(['Coloured noise, generated by convoluting above white noise '...
       'signal with a Gaussian filter'],'FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;
subplot(3,1,3);
plot(zT,z);
% xlim([0,1.5]);
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad)','FontSize',labelFontSize);
title('z','FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;


%% Process noise w1 + generation using Gaussian filter
wN = length(wT);

wW1 = normrnd(wMu(1),wSigma(1),[1,wN]);

wTDiff = zeros(1,wN-1);
for i = 1:wN-1
    wTDiff(i) = wT(i+1) - wT(i);
end
wTs  = mean(wTDiff);
wTau = linspace(-wT(end),wT(end),2*wN-1);
h    = sqrt(1/wTs*wS(1)*sqrt(pi))*exp(-wTau.^2/(2*wS(1)^2));
wCol1 = conv(h,wW1,'valid');

% Plot data
figure('Name',['Process noise w_1 and comparable coloured noise using '...
               'Gaussian filter']);
subplot(3,1,1);
plot(wT,wW1);
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad/s)','FontSize',labelFontSize);
title('White noise with same distribution as w_1',...
      'FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;
subplot(3,1,2);
plot(wT,wCol1);
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad/s)','FontSize',labelFontSize);
title(['Coloured noise, generated by convoluting above white noise '...
       'signal with a Gaussian filter'],'FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;
subplot(3,1,3);
plot(wT,w(1,:));
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad/s)','FontSize',labelFontSize);
title('w_1','FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;


%% Process noise w2 + generation using Gaussian filter
wW2 = normrnd(wMu(2),wSigma(2),[1,wN]);

h    = sqrt(1/wTs*wS(2)*sqrt(pi))*exp(-wTau.^2/(2*wS(2)^2));
wCol2 = conv(h,wW2,'valid');

% Plot data
figure('Name',['Process noise w_{2,res} and comparable coloured noise '...
               'using Gaussian filter']);
subplot(3,1,1);
plot(wT,wW2);
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad/s)','FontSize',labelFontSize);
title('White noise with same distribution as w_{2,res}',...
      'FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;
subplot(3,1,2);
plot(wT,wCol2);
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad/s)','FontSize',labelFontSize);
title(['Coloured noise, generated by convoluting above white noise '...
       'signal with a Gaussian filter'],'FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;
subplot(3,1,3);
plot(wT,w(2,:));
xlabel('Time (s)','FontSize',labelFontSize);
ylabel('Noise value (rad/s)','FontSize',labelFontSize);
title('w_{2,res}','FontSize',titleFontSize);
ax = gca;
ax.FontSize = axFontSize;
